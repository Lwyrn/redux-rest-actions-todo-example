{"version":3,"sources":["mockServer.js","todos/view/todoPropTypes.js","todos/view/filtersPropTypes.js","todos/filters.js","todos/view/EmptyList.js","todos/view/ErrorMessage.js","components/ButtonMenu.js","todos/view/TodoList.js","todos/view/EditTodo.js","components/Confirmation.js","todos/view/DeleteTodo.js","todos/view/TodosComponent.js","todos/actions.js","todos/selectors.js","todos/view/TodosContainer.js","todos/view/index.js","todos/reducers/reducerHelper.js","todos/reducers/listReducer.js","todos/reducers/updateReducer.js","todos/reducers/filterReducer.js","reducer.js","todos/reducer.js","store.js","apiConfig.js","App.js","serviceWorker.js","index.js"],"names":["mockServer","nextId","todos","id","content","completed","httpOk","httpCreated","httpNotFound","getId","config","parts","url","split","length","api","mockAdapter","onGet","reply","found","forEach","item","getTodo","newTodos","console","log","JSON","stringify","params","vf","filters","visibilityFilter","filter","search","match","toLowerCase","indexOf","listTodos","onPost","newTodo","parse","data","String","push","onPut","index","findIndex","e","updatedTodo","splice","onDelete","PropTypes","shape","string","bool","searchFilter","ALL","COMPLETED","NOT_COMPLETED","toQueryString","obj","visibility","queryString","parseQueryString","s","check","toLocaleLowerCase","checkVisibilityFilter","EmptyList","props","message","Box","mt","ErrorMessage","error","color","ButtonMenu","onChange","useState","anchorEl","setAnchorEl","handleClick","useCallback","event","currentTarget","handleClose","target","component","Button","aria-controls","aria-haspopup","onClick","label","Menu","keepMounted","open","Boolean","onClose","items","map","i","MenuItem","value","key","selected","display","TodoList","getTodos","updateFilters","addTodo","updateTodo","pending","updatePending","setNewTodo","history","useHistory","useEffect","filterValues","window","location","f","deleteItem","changeFilter","newFilters","changeSearch","editItem","toggleComplete","then","setTodo","addNewTodo","trim","handleKeypress","busy","useMemo","listOrErrorMessage","List","ListItem","divider","ListItemIcon","Checkbox","disableRipple","edge","disabled","checked","tabIndex","bind","ListItemText","primary","ml","IconButton","aria-label","className","Toolbar","TextField","variant","placeholder","onKeyPress","autoComplete","size","InputProps","endAdornment","InputAdornment","position","CircularProgress","EditTodo","cancelUpdate","useParams","setValue","setCompleted","payload","cancel","save","onChangeInput","updateError","mb","toString","todo","Confirmation","children","onCancel","onConfirm","DeleteTodo","deleteTodo","Paper","p","basename","TodosComponent","m","exact","path","listError","createAction","getTodosSuccess","getTodosError","setFilters","getTodoSuccess","getTodoError","addTodoSuccess","addTodoError","updateTodoSuccess","updateTodoError","deleteTodoSuccess","deleteTodoError","selectTodos","state","list","selectTodosError","selectTodosPending","selectUpdatePending","update","selectUpdateError","selectTodo","selectFilters","selectVisibilityFilter","selectSearchFilter","TodosContainer","connect","dispatch","initiate","draft","action","createReducer","actions","replaceTodo","initialState","todosReducer","combineReducers","listReducer","updateReducer","filterReducer","apiMiddlewareOpts","MockAdapter","mockDelay","enableTracing","baseURL","process","REACT_APP_BASE_URL","apiMiddleware","configureApiMiddleware","preloadedState","store","configureStore","reducer","rootReducer","middleware","thunk","configureApi","apiConfig","server","require","default","App","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a0e57d3.chunk.js","sourcesContent":["import {api} from 'redux-rest-actions';\n//\n// Simulated TODO server.\n//\nexport function mockServer() {\n  let nextId = 4; // eslint-disable-line\n\n  const todos = [\n    {id: '1', content: 'Learn React', completed: false},\n    {id: '2', content: 'Learn Redux', completed: false},\n    {id: '3', content: 'Build an app', completed: false}\n  ];\n\n  const httpOk = 200;\n  const httpCreated = 201;\n  const httpNotFound = 404;\n\n  function getId(config) {\n    const parts = config.url.split('/');\n    // eslint-disable-next-line\n    if (parts.length === 4) return parts[3];\n    return '';\n  }\n\n  // Handlers return an array in the form of [status, data, headers]\n\n  function listTodos(config) {\n    let newTodos = [...todos];\n    //  eslint-disable-next-line\n    console.log(`query ===> ${JSON.stringify(config.params)}`);\n    let vf = 'all';\n    if (config.params && config.params.filters && config.params.filters.visibilityFilter) {\n      vf = config.params.filters.visibilityFilter;\n    }\n    newTodos = newTodos.filter(item => {\n      if (vf === 'all') return true;\n      else if (vf === 'completed' && item.completed) return true;\n      else if (vf === 'not_completed' && !item.completed) return true;\n      return false;\n    });\n    if (config.params && config.params.filters && config.params.filters.search) {\n      newTodos = newTodos.filter(item => {\n        const match = config.params.filters.search.toLowerCase();\n        return item.content.toLowerCase().indexOf(match) >= 0;\n      });\n    }\n    const result = {todos: newTodos};\n    return [httpOk, result];\n  }\n\n  function getTodo(config) {\n    const id = getId(config);\n    let found = null;\n    todos.forEach(item => {\n      if (item.id === id) found = item;\n    });\n    if (!found) return [httpNotFound];\n    return [httpOk, found];\n  }\n\n  function listOrOneTodo(config) {\n    const id = getId(config);\n    if (id) {\n      return getTodo(config);\n    }\n    return listTodos(config);\n  }\n\n  function addTodo(config) {\n    const newTodo = {...JSON.parse(config.data)};\n    newTodo.id = String(nextId++);\n    todos.push(newTodo);\n    return [httpCreated, newTodo];\n  }\n\n  function updateTodo(config) {\n    const id = getId(config);\n    const index = todos.findIndex(e => e.id === id);\n    if (index === -1) return [httpNotFound];\n    const updatedTodo = JSON.parse(config.data);\n    todos.splice(index, 1, updatedTodo);\n    return [httpOk, updatedTodo];\n  }\n\n  function deleteTodo(config) {\n    const id = getId(config);\n    const index = todos.findIndex(e => e.id === id);\n    if (index === -1) return [httpNotFound];\n    todos.splice(index, 1);\n    return [httpOk, {id}];\n  }\n\n  api.mockAdapter.onGet(/\\/api\\/todos\\/*\\d*/).reply(listOrOneTodo);\n  api.mockAdapter.onPost('/api/todos').reply(addTodo);\n  api.mockAdapter.onPut(/\\/api\\/todos\\/\\d+/).reply(updateTodo);\n  api.mockAdapter.onDelete(/\\/api\\/todos\\/\\d+/).reply(deleteTodo);\n}\n\nexport default mockServer;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.string,\n  content: PropTypes.string,\n  completed: PropTypes.bool\n});\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  visibilityFilter: PropTypes.string,\n  searchFilter: PropTypes.string\n});\n","/* eslint-disable id-match */\nimport queryString from 'query-string';\n\n// visibility filter\nexport const ALL = 'all';\nexport const COMPLETED = 'completed';\nexport const NOT_COMPLETED = 'not_completed';\n\nexport function checkVisibilityFilter(s) {\n  if (!s) return ALL;\n  if (typeof s !== 'string') return ALL;\n  const check = s.toLocaleLowerCase();\n  if (check === ALL || check === COMPLETED || check === NOT_COMPLETED) {\n    return check;\n  }\n  return ALL;\n}\n\nexport const toQueryString = filters => {\n  const obj = {visibility: filters.visibilityFilter};\n  // don't include empty strings\n  if (filters.search) obj.search = filters.search;\n  return queryString.stringify(obj);\n};\n\nexport const parseQueryString = s => {\n  const obj = queryString.parse(s);\n  const filters = {};\n  if (!obj)\n    return {\n      visibilityFilter: ALL,\n      search: ''\n    };\n  filters.search = obj.search || '';\n  filters.visibilityFilter = checkVisibilityFilter(obj.visibility);\n  return filters;\n};\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nimport * as filters from '../filters';\nimport filtersPropTypes from './filtersPropTypes';\n\nfunction EmptyList(props) {\n  const {visibilityFilter, search} = props.filters;\n\n  let message = 'You have nothing to do!';\n\n  if (visibilityFilter === filters.NOT_COMPLETED) {\n    message = 'You have no uncompleted items';\n    if (search) message += ' that match your search';\n  } else if (visibilityFilter === filters.COMPLETED) {\n    message = 'You have no completed items';\n    if (search) message += ' that match your search';\n  } else if (search) {\n    message = 'You have nothing to do that matches your search';\n  }\n  return <Box mt=\"2em\">{message}</Box>;\n}\n\nEmptyList.propTypes = {\n  filters: filtersPropTypes\n};\n\nexport default EmptyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nfunction ErrorMessage({error}) {\n  return (\n    <Box mt=\"3em\" color=\"red\">\n      {error.message}\n    </Box>\n  );\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.object // eslint-disable-line\n};\n\nexport default ErrorMessage;\n","import React, {useCallback, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\n\nfunction ButtonMenu(props) {\n  const {onChange} = props;\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = useCallback(event => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(\n    e => {\n      setAnchorEl(null);\n      onChange(e.target.id);\n    },\n    [onChange]\n  );\n\n  return (\n    <Box component={props.component}>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {props.label}\n      </Button>\n      <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        {props.items.map(i => (\n          <MenuItem\n            id={i.value}\n            key={i.value}\n            selected={i.value === props.selected}\n            onClick={handleClose}\n          >\n            {i.display}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Box>\n  );\n}\n\nButtonMenu.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      display: PropTypes.string\n    })\n  ),\n  selected: PropTypes.string,\n  label: PropTypes.string,\n  component: PropTypes.string\n};\n\nexport default ButtonMenu;\n","/* eslint-disable id-match */\nimport React, {useEffect, useCallback, useMemo, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useHistory} from 'react-router-dom';\n\nimport EmptyList from './EmptyList';\nimport ErrorMessage from './ErrorMessage';\nimport ButtonMenu from '../../components/ButtonMenu';\nimport todoPropTypes from './todoPropTypes';\nimport filtersPropTypes from './filtersPropTypes';\nimport {COMPLETED, NOT_COMPLETED, parseQueryString} from '../filters';\n\nfunction TodoList(props) {\n  const {\n    getTodos,\n    visibilityFilter,\n    searchFilter,\n    updateFilters,\n    addTodo,\n    updateTodo,\n    pending,\n    updatePending,\n    todos,\n    error,\n    filters\n  } = props;\n\n  function filterDisplay(f) {\n    if (f === NOT_COMPLETED) return 'Not completed';\n    else if (f === COMPLETED) return 'Completed';\n    return 'All';\n  }\n\n  const filterOpts = [\n    {value: 'all', display: 'All'},\n    {value: 'completed', display: 'Completed'},\n    {value: 'not_completed', display: 'Not completed'}\n  ];\n\n  const [newTodo, setNewTodo] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const filterValues = parseQueryString(window.location.search);\n    updateFilters(filterValues, history);\n    getTodos(filterValues);\n  }, [getTodos, updateFilters, history]);\n\n  const deleteItem = useCallback(\n    id => {\n      history.push(`/delete/${id}`);\n    },\n    [history]\n  );\n\n  const changeFilter = useCallback(\n    f => {\n      const newFilters = {...filters, visibilityFilter: f};\n      updateFilters(newFilters, history);\n      getTodos(newFilters);\n    },\n    [getTodos, filters, updateFilters, history]\n  );\n\n  const changeSearch = useCallback(\n    e => {\n      const newFilters = {...filters, search: e.target.value};\n      updateFilters(newFilters, history);\n      getTodos(newFilters);\n    },\n    [getTodos, filters, updateFilters, history]\n  );\n\n  const editItem = useCallback(\n    id => {\n      history.push(`/edit/${id}`);\n    },\n    [history]\n  );\n\n  const toggleComplete = useCallback(\n    item => {\n      updateTodo(item.id, {...item, completed: !item.completed}).then(() => getTodos(filters));\n    },\n    [getTodos, filters, updateTodo]\n  );\n\n  const setTodo = useCallback(e => {\n    setNewTodo(e.target.value);\n  }, []);\n\n  const addNewTodo = useCallback(() => {\n    const value = newTodo.trim();\n    if (!value) return;\n    addTodo({content: value});\n    setNewTodo('');\n  }, [addTodo, newTodo]);\n\n  const handleKeypress = useCallback(\n    e => {\n      if (e.key === 'Enter') {\n        addNewTodo();\n      }\n    },\n    [addNewTodo]\n  );\n\n  const busy = useMemo(() => pending || updatePending, [pending, updatePending]);\n\n  const listOrErrorMessage = useMemo(() => {\n    if (error) return <ErrorMessage error={error} />;\n    if (!todos) return null;\n\n    const empty = todos.length ? null : <EmptyList filters={filters} />;\n\n    return (\n      empty || (\n        <List>\n          {todos.map(item => (\n            <ListItem key={item.id} divider>\n              <ListItemIcon>\n                <Checkbox\n                  disableRipple\n                  edge=\"start\"\n                  disabled={busy}\n                  checked={item.completed}\n                  tabIndex={-1}\n                  onChange={toggleComplete.bind(null, item)}\n                />\n              </ListItemIcon>\n              <ListItemText primary={item.content} />\n              <Box component=\"span\" ml={'1em'}>\n                <IconButton\n                  aria-label=\"edit\"\n                  onClick={editItem.bind(null, item.id)}\n                  disabled={busy}\n                >\n                  <EditIcon />\n                </IconButton>\n              </Box>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={deleteItem.bind(null, item.id)}\n                disabled={busy}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      )\n    );\n  }, [todos, busy, deleteItem, editItem, toggleComplete, error, filters]);\n\n  return (\n    <>\n      <div className=\"header\">\n        <h2>Todo List</h2>\n      </div>\n      <Toolbar>\n        <TextField\n          id=\"add-todo\"\n          variant=\"outlined\"\n          placeholder=\"Add a new TODO item\"\n          value={newTodo}\n          onChange={setTodo}\n          disabled={busy}\n          onKeyPress={handleKeypress}\n          autoComplete=\"off\"\n          size=\"small\"\n        />\n        <Box component=\"span\" ml=\"1em\">\n          <Button variant=\"contained\" color=\"primary\" disabled={busy} onClick={addNewTodo}>\n            <AddIcon />\n          </Button>\n        </Box>\n        <Box ml=\"1em\">\n          Showing: {filterDisplay(visibilityFilter)}\n          <ButtonMenu\n            label=\"Change Filter\"\n            items={filterOpts}\n            onChange={changeFilter}\n            component=\"span\"\n            selected={visibilityFilter}\n          />\n        </Box>\n        <TextField\n          id=\"search-todo\"\n          variant=\"outlined\"\n          placeholder=\"Search\"\n          value={searchFilter}\n          onChange={changeSearch}\n          autoComplete=\"off\"\n          size=\"small\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchIcon />\n              </InputAdornment>\n            )\n          }}\n        />\n        <Box component=\"span\" ml=\"1em\">\n          {busy && <CircularProgress color=\"secondary\" />}\n        </Box>\n      </Toolbar>\n      {listOrErrorMessage}\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  pending: PropTypes.bool,\n  updatePending: PropTypes.bool,\n  todos: PropTypes.arrayOf(todoPropTypes),\n  getTodos: PropTypes.func,\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  visibilityFilter: PropTypes.string,\n  searchFilter: PropTypes.string,\n  updateFilters: PropTypes.func,\n  error: PropTypes.object, // eslint-disable-line\n  filters: filtersPropTypes\n};\n\nexport default TodoList;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {useHistory, useParams} from 'react-router-dom';\n\nfunction EditTodo(props) {\n  const {getTodo, updateTodo, cancelUpdate} = props;\n\n  const history = useHistory();\n\n  const {id} = useParams('id');\n\n  const [value, setValue] = useState('');\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    // redux-rest-middleware APIs return a promise that\n    // resolves with the payload on success. We use this\n    // to update local state with the TODO being edited.\n    getTodo(id).then(payload => {\n      if (payload && payload.content) {\n        setValue(payload.content);\n        setCompleted(payload.completed);\n      }\n    });\n  }, [id, getTodo]);\n\n  const cancel = useCallback(() => {\n    cancelUpdate();\n    history.push('/');\n  }, [history, cancelUpdate]);\n\n  const save = useCallback(() => {\n    updateTodo(id, {id, content: value, completed}).then(() => {\n      history.push('/');\n    });\n  }, [updateTodo, history, id, value, completed]);\n\n  const onChangeInput = useCallback(\n    e => {\n      setValue(e.target.value);\n    },\n    [setValue]\n  );\n\n  if (props.updatePending) return <CircularProgress />;\n  if (props.updateError)\n    return (\n      <>\n        <Box color=\"red\" mb=\"1em\">\n          {props.updateError.toString()}\n        </Box>\n        <Button variant=\"contained\" onClick={cancel}>\n          BACK\n        </Button>\n      </>\n    );\n\n  if (!props.todo) return null;\n\n  return (\n    <>\n      <div>Edit Todo</div>\n      <Box mt=\"1em\" mb=\"1em\">\n        <TextField id=\"edit-todo\" variant=\"outlined\" onChange={onChangeInput} value={value} />\n      </Box>\n      <Box mt=\"1em\" mb=\"1em\">\n        <Button variant=\"contained\" onClick={cancel}>\n          Cancel\n        </Button>\n        <Box component=\"span\" ml=\"1em\">\n          <Button variant=\"contained\" color=\"primary\" onClick={save}>\n            Save\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nEditTodo.propTypes = {\n  getTodo: PropTypes.func.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  cancelUpdate: PropTypes.func,\n  updateError: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  updatePending: PropTypes.bool,\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    content: PropTypes.string,\n    completed: PropTypes.bool\n  })\n};\n\nexport default EditTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nfunction Confirmation(props) {\n  return (\n    <Box mt=\"1em\">\n      <Box mb=\"1em\">{props.children}</Box>\n      <Button variant=\"contained\" onClick={props.onCancel}>\n        Cancel\n      </Button>\n      <Box component=\"span\" ml=\"1em\">\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onConfirm}>\n          Delete\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nConfirmation.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired\n};\n\nexport default Confirmation;\n","import React, {useCallback, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport Confirmation from '../../components/Confirmation';\nimport todoPropTyes from './todoPropTypes';\n\nfunction DeleteTodo(props) {\n  const {getTodo, todo, deleteTodo, cancelUpdate} = props;\n\n  const history = useHistory();\n\n  const {id} = useParams('id');\n\n  useEffect(() => {\n    getTodo(id);\n  }, [id, getTodo]);\n\n  const onCancel = useCallback(() => {\n    cancelUpdate();\n    history.push('/');\n  }, [history, cancelUpdate]);\n\n  const onDelete = useCallback(() => {\n    deleteTodo(id).then(() => {\n      history.push('/');\n    });\n  }, [history, id, deleteTodo]);\n\n  if (props.updatePending) return <CircularProgress />;\n  if (props.updateError)\n    return (\n      <>\n        <Box color=\"red\" mb=\"1em\">\n          {props.updateError.toString()}\n        </Box>\n        <Button variant=\"contained\" onClick={onCancel}>\n          BACK\n        </Button>\n      </>\n    );\n\n  if (!props.todo) return null;\n\n  return (\n    <>\n      <Box mb=\"1em\">\n        <div>Delete TODO</div>\n        <Confirmation onCancel={onCancel} onConfirm={onDelete}>\n          <p className=\"warning\">Are you sure you want to delete TODO:</p>\n          <Paper>\n            <Box p=\"1em\">\n              {todo.content} {todo.completed ? '(completed)' : '(not completed)'}\n            </Box>\n          </Paper>\n        </Confirmation>\n      </Box>\n    </>\n  );\n}\n\nDeleteTodo.propTypes = {\n  getTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  updateError: PropTypes.object, // eslint-disable-line\n  updatePending: PropTypes.bool,\n  todo: todoPropTyes,\n  cancelUpdate: PropTypes.func\n};\n\nexport default DeleteTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport todoPropTypes from './todoPropTypes';\nimport filtersPropTypes from './filtersPropTypes';\nimport TodoList from './TodoList';\nimport EditTodo from './EditTodo';\nimport DeleteTodo from './DeleteTodo';\n\nlet basename = '';\n// eslint-disable-next-line\nif (process.env.NODE_ENV === 'production') {\n  basename = '/redux-rest-actions-todo-example';\n}\n\nfunction TodosComponent(props) {\n  return (\n    <Box m=\"1em\">\n      <Router basename={basename}>\n        <Switch>\n          <Route exact path=\"/\">\n            <TodoList\n              getTodos={props.getTodos}\n              addTodo={props.addTodo}\n              error={props.listError}\n              updateTodo={props.updateTodo}\n              deleteTodo={props.deleteTodo}\n              todos={props.todos}\n              pending={props.pending}\n              updatePending={props.updatePending}\n              visibilityFilter={props.visibilityFilter}\n              searchFilter={props.searchFilter}\n              updateFilters={props.updateFilters}\n              filters={props.filters}\n            />\n          </Route>\n          <Route exact path=\"/edit/:id\">\n            <EditTodo\n              getTodo={props.getTodo}\n              updateTodo={props.updateTodo}\n              updateError={props.updateError}\n              updatePending={props.updatePending}\n              todo={props.todo}\n              cancelUpdate={props.cancelUpdate}\n            />\n          </Route>\n          <Route exact path=\"/delete/:id\">\n            <DeleteTodo\n              getTodo={props.getTodo}\n              deleteTodo={props.deleteTodo}\n              updateError={props.updateError}\n              updatePending={props.updatePending}\n              todo={props.todo}\n              cancelUpdate={props.cancelUpdate}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </Box>\n  );\n}\n\nTodosComponent.propTypes = {\n  getTodos: PropTypes.func,\n  getTodo: PropTypes.func,\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n  cancelUpdate: PropTypes.func,\n  todos: PropTypes.arrayOf(todoPropTypes),\n  todo: todoPropTypes,\n  visibilityFilter: PropTypes.string,\n  searchFilter: PropTypes.string,\n  pending: PropTypes.bool,\n  updatePending: PropTypes.bool,\n  updateFilters: PropTypes.func,\n  listError: PropTypes.object, // eslint-disable-line\n  updateError: PropTypes.object, // eslint-disable-line\n  filters: filtersPropTypes\n};\n\nexport default TodosComponent;\n","import {createAction} from '@reduxjs/toolkit';\nimport {toQueryString} from './filters';\n\nexport const getTodos = createAction('GET_TODOS', filters =>\n  filters ? {payload: {params: {filters}}} : {}\n);\nexport const getTodosSuccess = createAction('GET_TODOS_SUCCESS');\n\nexport const getTodosError = createAction('GET_TODOS_ERROR');\n\nexport const setFilters = createAction('SET_FILTERS');\n\n// This is used instead of calling setFilters directly so\n// that the URL gets updated on every filter change.\nexport const updateFilters = (filters, history) => dispatch => {\n  dispatch(setFilters(filters));\n  history.push({search: toQueryString(filters)});\n};\n\nexport const getTodo = createAction('GET_TODO', id => ({payload: {id}}));\nexport const getTodoSuccess = createAction('GET_TODO_SUCCESS');\nexport const getTodoError = createAction('GET_TODO_ERROR');\n\nexport const addTodo = createAction('ADD_TODO', todo => ({\n  payload: {data: {...todo, completed: false}}\n}));\nexport const addTodoSuccess = createAction('ADD_TODO_SUCCESS');\nexport const addTodoError = createAction('ADD_TODO_ERROR');\n\nexport const updateTodo = createAction('UPDATE_TODO', (id, todo) => ({\n  payload: {id, data: todo}\n}));\nexport const updateTodoSuccess = createAction('UPDATE_TODO_SUCCESS');\nexport const updateTodoError = createAction('UPDATE_TODO_ERROR');\n\nexport const deleteTodo = createAction('DELETE_TODO', id => ({payload: {id}}));\nexport const deleteTodoSuccess = createAction('DELETE_TODO_SUCCESS');\nexport const deleteTodoError = createAction('DELETE_TODO_ERROR');\n\nexport const cancelUpdate = createAction('CANCEL_UPDATE');\n","export const selectTodos = state => state.list.todos;\nexport const selectTodosError = state => state.list.error;\nexport const selectTodosPending = state => state.list.pending;\n\nexport const selectUpdatePending = state => state.update.pending;\nexport const selectUpdateError = state => state.update.error;\nexport const selectTodo = state => state.update.todo;\n\nexport const selectFilters = state => state.filters;\nexport const selectVisibilityFilter = state => state.filters.visibilityFilter;\nexport const selectSearchFilter = state => state.filters.search;\n","import React from 'react';\nimport {api} from 'redux-rest-actions';\nimport {connect} from 'react-redux';\nimport TodosComponent from './TodosComponent';\n\nimport {updateFilters, cancelUpdate} from '../actions';\nimport {\n  // For client side filtering\n  // selectVisibleTodos,\n  selectTodos,\n  selectTodo,\n  selectTodosError,\n  selectTodosPending,\n  selectUpdatePending,\n  selectUpdateError,\n  selectVisibilityFilter,\n  selectSearchFilter,\n  selectFilters\n} from '../selectors';\n\nfunction TodosContainer(props) {\n  return (\n    <TodosComponent\n      {...props}\n      getTodos={api.getTodos}\n      getTodo={api.getTodo}\n      addTodo={api.addTodo}\n      updateTodo={api.updateTodo}\n      deleteTodo={api.deleteTodo}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  // For client side filtering, use the next line instead\n  // todos: selectVisibleTodos(state),\n  todos: selectTodos(state),\n  todo: selectTodo(state),\n  listError: selectTodosError(state),\n  pending: selectTodosPending(state),\n  updatePending: selectUpdatePending(state),\n  updateError: selectUpdateError(state),\n  visibilityFilter: selectVisibilityFilter(state),\n  searchFilter: selectSearchFilter(state),\n  filters: selectFilters(state)\n});\n\nexport default connect(mapStateToProps, {updateFilters, cancelUpdate})(TodosContainer);\n","import TodosContainer from './TodosContainer';\n\nexport default TodosContainer;\n","// for all requests, set the pending flag and clear the error flag\nexport function initiate(draft) {\n  draft.pending = true;\n  draft.error = null;\n}\n\n// for errors, clear pending flag and store the error\nexport function error(draft, action) {\n  // eslint-disable-next-line\n  if (process.env.NODE_ENV != 'test') {\n    // eslint-disable-next-line\n    console.log(`ERROR: ${action.payload.toString()}`);\n  }\n  draft.pending = false;\n  draft.error = action.payload;\n}\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {initiate, error} from './reducerHelper';\nimport * as actions from '../actions';\n\nfunction replaceTodo(draft, action) {\n  const {id} = action.payload;\n  const index = draft.todos.findIndex(e => e.id === id);\n  if (index === -1) return;\n  draft.todos.splice(index, 1, action.payload);\n}\n\nfunction deleteTodo(draft, action) {\n  const {id} = action.payload;\n  const index = draft.todos.findIndex(e => e.id === id);\n  if (index === -1) return;\n  draft.todos.splice(index, 1);\n}\n\nconst initialState = {\n  todos: [],\n  pending: false,\n  error: null\n};\n\nexport default createReducer(initialState, {\n  [actions.getTodos]: draft => {\n    initiate(draft);\n  },\n  [actions.getTodosSuccess]: (draft, action) => {\n    draft.pending = false;\n    draft.todos = action.payload.todos;\n  },\n  [actions.addTodoSuccess]: (draft, action) => {\n    draft.todos.push(action.payload);\n  },\n  [actions.deleteTodoSuccess]: (draft, action) => {\n    deleteTodo(draft, action);\n  },\n  [actions.updateTodoSuccess]: (draft, action) => {\n    replaceTodo(draft, action);\n  },\n  [actions.getTodosError]: (draft, action) => {\n    error(draft, action);\n  }\n});\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {initiate, error} from './reducerHelper';\nimport * as actions from '../actions';\n\nconst initialState = {\n  pending: false,\n  error: null,\n  todo: null\n};\n\nexport default createReducer(initialState, {\n  // get a todo - for edit\n  [actions.getTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.getTodoSuccess]: (draft, action) => {\n    draft.pending = false;\n    draft.todo = action.payload;\n  },\n  [actions.getTodoError]: (draft, action) => {\n    error(draft, action);\n  },\n  // remove the todo being updated\n  [actions.cancelUpdate]: draft => {\n    draft.todo = null;\n  },\n  // add a TODO\n  [actions.addTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.addTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.addTodoError]: (draft, action) => {\n    error(draft, action);\n  },\n  // update a todo\n  [actions.updateTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.updateTodoSuccess]: draft => {\n    draft.pending = false;\n    draft.todo = null;\n  },\n  [actions.updateTodoError]: (draft, action) => {\n    error(draft, action);\n  },\n  // delete a todo\n  [actions.deleteTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.deleteTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.deleteTodoError]: (draft, action) => {\n    error(draft, action);\n  }\n});\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport * as filters from '../filters';\n\nimport {setFilters} from '../actions';\n\nconst initialState = {\n  search: '',\n  visibilityFilter: filters.ALL\n};\n\nexport default createReducer(initialState, {\n  [setFilters]: (draft, action) => action.payload\n});\n","import todosReducer from './todos/reducer';\n\n// Import all other reducers here and use combineReducers\n// to import the root reducer. This app only has one.\n\nexport default todosReducer;\n","/* eslint-disable default-case */\nimport {combineReducers} from 'redux';\n\nimport listReducer from './reducers/listReducer';\nimport updateReducer from './reducers/updateReducer';\nimport filterReducer from './reducers/filterReducer';\n\nconst rootReducer = combineReducers({\n  list: listReducer,\n  update: updateReducer,\n  filters: filterReducer\n});\n\nexport default rootReducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport {configureApiMiddleware} from 'redux-rest-actions';\nimport rootReducer from './reducer';\nimport MockAdapter from 'axios-mock-adapter';\nimport thunk from 'redux-thunk';\n\nconst apiMiddlewareOpts = {};\n\n// eslint-disable-next-line\nif (process.env.REACT_APP_USE_MOCK_DATA) {\n  apiMiddlewareOpts.mockAdapter = MockAdapter;\n  apiMiddlewareOpts.mockDelay = 500;\n}\n// eslint-disable-next-line\nif (process.env.REACT_APP_ENABLE_MIDDLEWARE_LOGGING) {\n  apiMiddlewareOpts.enableTracing = true;\n}\n\nlet baseURL = '';\n// eslint-disable-next-line\nif (process.env.REACT_APP_BASE_URL) {\n  // eslint-disable-next-line\n  baseURL = process.env.REACT_APP_BASE_URL;\n}\n\nconst apiMiddleware = configureApiMiddleware({baseURL}, apiMiddlewareOpts);\n\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [apiMiddleware, thunk],\n    preloadedState\n  });\n  // eslint-disable-next-line\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducer', () => store.replaceReducer(rootReducer));\n  }\n  return store;\n}\n","import * as todos from './todos/actions';\n\nexport default {\n  getTodos: {\n    url: '/api/todos',\n    actions: [todos.getTodos, todos.getTodosSuccess, todos.getTodosError]\n  },\n  getTodo: {\n    url: '/api/todos/:id',\n    actions: [todos.getTodo, todos.getTodoSuccess, todos.getTodoError]\n  },\n  addTodo: {\n    url: '/api/todos',\n    actions: [todos.addTodo, todos.addTodoSuccess, todos.addTodoError]\n  },\n  updateTodo: {\n    url: '/api/todos/:id',\n    actions: [todos.updateTodo, todos.updateTodoSuccess, todos.updateTodoError]\n  },\n  deleteTodo: {\n    url: '/api/todos/:id',\n    actions: [todos.deleteTodo, todos.deleteTodoSuccess, todos.deleteTodoError]\n  }\n};\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {configureApi} from 'redux-rest-actions';\nimport Todos from './todos/view';\n\nimport './App.css';\nimport configureStore from './store';\nimport apiConfig from './apiConfig';\n\nconst store = configureStore();\nconfigureApi(store, apiConfig);\n\nif (process.env.REACT_APP_USE_MOCK_DATA) {\n  const server = require('./mockServer').default;\n  server();\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Todos />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}