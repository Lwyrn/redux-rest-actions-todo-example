{"version":3,"sources":["mockServer.js","todos/view/todoPropTypes.js","todos/view/filtersPropTypes.js","todos/filters.js","todos/view/EmptyList.js","todos/view/ErrorMessage.js","components/ButtonMenu.js","todos/view/TodoList.js","todos/view/EditTodo.js","components/Confirmation.js","todos/view/DeleteTodo.js","todos/view/TodosComponent.js","todos/actions.js","todos/selectors.js","todos/view/TodosContainer.js","todos/view/index.js","todos/reducers/reducerHelper.js","todos/reducers/listReducer.js","todos/reducers/updateReducer.js","todos/reducers/filterReducer.js","reducer.js","todos/reducer.js","store.js","apiConfig.js","App.js","serviceWorker.js","index.js"],"names":["mockServer","nextId","todos","id","content","completed","httpOk","httpCreated","httpNotFound","getId","config","parts","url","split","length","api","mockAdapter","onGet","reply","found","forEach","item","getTodo","newTodos","console","log","JSON","stringify","params","vf","filters","visibility","filter","search","match","toLowerCase","indexOf","listTodos","onPost","newTodo","parse","data","String","push","onPut","index","findIndex","e","updatedTodo","splice","onDelete","PropTypes","shape","string","bool","searchFilter","ALL","COMPLETED","NOT_COMPLETED","toQueryString","obj","queryString","parseQueryString","s","check","toLocaleLowerCase","checkVisibility","EmptyList","props","message","Box","mt","ErrorMessage","error","retry","color","m","Button","onClick","variant","ButtonMenu","onChange","useState","anchorEl","setAnchorEl","handleClick","useCallback","event","currentTarget","handleClose","target","component","aria-controls","aria-haspopup","label","Menu","keepMounted","open","Boolean","onClose","items","map","i","MenuItem","value","key","selected","display","TodoList","getTodos","updateFilters","addTodo","updateTodo","pending","updatePending","setNewTodo","lastUpdateAction","setLastUpdateAction","history","useHistory","useEffect","filterValues","window","location","f","deleteItem","changeFilter","newFilters","changeSearch","editItem","toggleComplete","then","res","setTodo","addNewTodo","trim","handleKeypress","busy","useMemo","listOrEmptyMessage","List","ListItem","divider","ListItemIcon","Checkbox","disableRipple","edge","disabled","checked","tabIndex","bind","ListItemText","primary","ml","IconButton","aria-label","updateErrorMessage","updateError","className","TextField","placeholder","onKeyPress","autoComplete","size","mr","InputProps","endAdornment","InputAdornment","position","CircularProgress","toString","EditTodo","useParams","setValue","setCompleted","fetchError","setFetchError","payload","cancel","save","onChangeInput","errorMessage","mb","Confirmation","children","onCancel","onConfirm","DeleteTodo","deleteTodo","todo","Paper","p","basename","TodosComponent","exact","path","listError","createAction","getTodosSuccess","getTodosError","getTodoSuccess","getTodoError","addTodoSuccess","addTodoError","updateTodoSuccess","updateTodoError","deleteTodoSuccess","deleteTodoError","setFilters","selectTodos","state","list","selectTodosError","selectTodosPending","selectUpdatePending","update","selectUpdateError","selectTodo","selectFilters","selectVisibility","selectSearchFilter","TodosContainer","connect","selectors","dispatch","initiate","draft","action","createReducer","actions","initialState","todosReducer","combineReducers","listReducer","updateReducer","filterReducer","apiMiddlewareOpts","process","REACT_APP_USE_MOCK_DATA","MockAdapter","mockDelay","REACT_APP_ENABLE_MIDDLEWARE_LOGGING","enableTracing","baseURL","apiMiddleware","configureApiMiddleware","preloadedState","store","configureStore","reducer","rootReducer","middleware","thunk","configureApi","apiConfig","server","require","default","App","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cf76abf.chunk.js","sourcesContent":["import {api} from 'redux-rest-actions';\n//\n// Simulated TODO server.\n//\nexport function mockServer() {\n  let nextId = 4; // eslint-disable-line\n\n  const todos = [\n    {id: '1', content: 'Learn React', completed: false},\n    {id: '2', content: 'Learn Redux', completed: false},\n    {id: '3', content: 'Build an app', completed: false}\n  ];\n\n  const httpOk = 200;\n  const httpCreated = 201;\n  const httpNotFound = 404;\n\n  function getId(config) {\n    const parts = config.url.split('/');\n    // eslint-disable-next-line\n    if (parts.length === 4) return parts[3];\n    return '';\n  }\n\n  // Handlers return an array in the form of [status, data, headers]\n\n  function listTodos(config) {\n    let newTodos = [...todos];\n    //  eslint-disable-next-line\n    console.log(`query ===> ${JSON.stringify(config.params)}`);\n    let vf = 'all';\n    if (config.params && config.params.filters && config.params.filters.visibility) {\n      vf = config.params.filters.visibility;\n    }\n    newTodos = newTodos.filter(item => {\n      if (vf === 'all') return true;\n      else if (vf === 'completed' && item.completed) return true;\n      else if (vf === 'not_completed' && !item.completed) return true;\n      return false;\n    });\n    if (config.params && config.params.filters && config.params.filters.search) {\n      newTodos = newTodos.filter(item => {\n        const match = config.params.filters.search.toLowerCase();\n        return item.content.toLowerCase().indexOf(match) >= 0;\n      });\n    }\n    const result = {todos: newTodos};\n    return [httpOk, result];\n  }\n\n  function getTodo(config) {\n    const id = getId(config);\n    let found = null;\n    todos.forEach(item => {\n      if (item.id === id) found = item;\n    });\n    if (!found) return [httpNotFound];\n    return [httpOk, found];\n  }\n\n  function listOrOneTodo(config) {\n    const id = getId(config);\n    if (id) {\n      return getTodo(config);\n    }\n    return listTodos(config);\n  }\n\n  function addTodo(config) {\n    const newTodo = {...JSON.parse(config.data)};\n    newTodo.id = String(nextId++);\n    todos.push(newTodo);\n    return [httpCreated, newTodo];\n  }\n\n  function updateTodo(config) {\n    const id = getId(config);\n    const index = todos.findIndex(e => e.id === id);\n    if (index === -1) return [httpNotFound];\n    const updatedTodo = JSON.parse(config.data);\n    todos.splice(index, 1, updatedTodo);\n    return [httpOk, updatedTodo];\n  }\n\n  function deleteTodo(config) {\n    const id = getId(config);\n    const index = todos.findIndex(e => e.id === id);\n    if (index === -1) return [httpNotFound];\n    todos.splice(index, 1);\n    return [httpOk, {id}];\n  }\n\n  api.mockAdapter.onGet(/\\/api\\/todos\\/*\\d*/).reply(listOrOneTodo);\n  api.mockAdapter.onPost('/api/todos').reply(addTodo);\n  api.mockAdapter.onPut(/\\/api\\/todos\\/\\d+/).reply(updateTodo);\n  api.mockAdapter.onDelete(/\\/api\\/todos\\/\\d+/).reply(deleteTodo);\n}\n\nexport default mockServer;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.string,\n  content: PropTypes.string,\n  completed: PropTypes.bool\n});\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  visibility: PropTypes.string,\n  searchFilter: PropTypes.string\n});\n","/* eslint-disable id-match */\nimport queryString from 'query-string';\n\n// visibility filter\nexport const ALL = 'all';\nexport const COMPLETED = 'completed';\nexport const NOT_COMPLETED = 'not_completed';\n\nexport function checkVisibility(s) {\n  if (!s) return ALL;\n  if (typeof s !== 'string') return ALL;\n  const check = s.toLocaleLowerCase();\n  if (check === ALL || check === COMPLETED || check === NOT_COMPLETED) {\n    return check;\n  }\n  return ALL;\n}\n\nexport const toQueryString = filters => {\n  const obj = {visibility: filters.visibility};\n  // don't include empty strings\n  if (filters.search) obj.search = filters.search;\n  return queryString.stringify(obj);\n};\n\nexport const parseQueryString = s => {\n  const obj = queryString.parse(s);\n  const filters = {};\n  if (!obj)\n    return {\n      visibility: ALL,\n      search: ''\n    };\n  filters.search = obj.search || '';\n  filters.visibility = checkVisibility(obj.visibility);\n  return filters;\n};\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nimport * as filters from '../filters';\nimport filtersPropTypes from './filtersPropTypes';\n\nfunction EmptyList(props) {\n  const {visibility, search} = props.filters;\n\n  let message = 'You have nothing to do!';\n\n  if (visibility === filters.NOT_COMPLETED) {\n    message = 'You have no uncompleted items';\n    if (search) message += ' that match your search';\n  } else if (visibility === filters.COMPLETED) {\n    message = 'You have no completed items';\n    if (search) message += ' that match your search';\n  } else if (search) {\n    message = 'You have nothing to do that matches your search';\n  }\n  return <Box mt=\"2em\">{message}</Box>;\n}\n\nEmptyList.propTypes = {\n  filters: filtersPropTypes\n};\n\nexport default EmptyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nfunction ErrorMessage({error, retry}) {\n  return (\n    <Box mt=\"1em\" color=\"red\">\n      {error}\n      {retry && (\n        <Box m=\"1em\">\n          <Button onClick={retry} variant=\"contained\">\n            Retry\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.string.isRequired,\n  retry: PropTypes.func\n};\n\nexport default ErrorMessage;\n","import React, {useCallback, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\n\nfunction ButtonMenu(props) {\n  const {onChange} = props;\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = useCallback(event => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(\n    e => {\n      setAnchorEl(null);\n      onChange(e.target.id);\n    },\n    [onChange]\n  );\n\n  return (\n    <Box component={props.component}>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {props.label}\n      </Button>\n      <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        {props.items.map(i => (\n          <MenuItem\n            id={i.value}\n            key={i.value}\n            selected={i.value === props.selected}\n            onClick={handleClose}\n          >\n            {i.display}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Box>\n  );\n}\n\nButtonMenu.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      display: PropTypes.string\n    })\n  ),\n  selected: PropTypes.string,\n  label: PropTypes.string,\n  component: PropTypes.string\n};\n\nexport default ButtonMenu;\n","/* eslint-disable id-match */\nimport React, {useEffect, useCallback, useMemo, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useHistory} from 'react-router-dom';\n\nimport EmptyList from './EmptyList';\nimport ErrorMessage from './ErrorMessage';\nimport ButtonMenu from '../../components/ButtonMenu';\nimport todoPropTypes from './todoPropTypes';\nimport filtersPropTypes from './filtersPropTypes';\nimport {COMPLETED, NOT_COMPLETED, parseQueryString} from '../filters';\n\nfunction TodoList(props) {\n  const {\n    getTodos,\n    visibility,\n    searchFilter,\n    updateFilters,\n    addTodo,\n    updateTodo,\n    pending,\n    updatePending,\n    todos,\n    error,\n    filters\n  } = props;\n\n  function filterDisplay(f) {\n    if (f === NOT_COMPLETED) return 'Not completed';\n    else if (f === COMPLETED) return 'Completed';\n    return 'All';\n  }\n\n  const filterOpts = [\n    {value: 'all', display: 'All'},\n    {value: 'completed', display: 'Completed'},\n    {value: 'not_completed', display: 'Not completed'}\n  ];\n\n  const [newTodo, setNewTodo] = useState('');\n  // When an update error occurs, this distinguishes whether it\n  // was an Add or Update TODO, which are both handled by the\n  // todo list.\n  const [lastUpdateAction, setLastUpdateAction] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const filterValues = parseQueryString(window.location.search);\n    updateFilters(filterValues, history);\n    getTodos(filterValues);\n    // eslint-disable-next-line\n  }, []);\n\n  const deleteItem = useCallback(\n    id => {\n      history.push(`/delete/${id}`);\n    },\n    [history]\n  );\n\n  const changeFilter = useCallback(\n    f => {\n      const newFilters = {...filters, visibility: f};\n      updateFilters(newFilters, history);\n      getTodos(newFilters);\n    },\n    [getTodos, filters, updateFilters, history]\n  );\n\n  const changeSearch = useCallback(\n    e => {\n      const newFilters = {...filters, search: e.target.value};\n      updateFilters(newFilters, history);\n      getTodos(newFilters);\n    },\n    [getTodos, filters, updateFilters, history]\n  );\n\n  const editItem = useCallback(\n    id => {\n      history.push(`/edit/${id}`);\n    },\n    [history]\n  );\n\n  const toggleComplete = useCallback(\n    item => {\n      setLastUpdateAction('update');\n      updateTodo(item.id, {...item, completed: !item.completed}).then(res => {\n        if (res) getTodos(filters);\n      });\n    },\n    [getTodos, filters, updateTodo]\n  );\n\n  const retry = useCallback(() => {\n    getTodos(filters);\n  }, [getTodos, filters]);\n\n  const setTodo = useCallback(e => {\n    setNewTodo(e.target.value);\n  }, []);\n\n  const addNewTodo = useCallback(() => {\n    const value = newTodo.trim();\n    if (!value) return;\n    setLastUpdateAction('add');\n    addTodo({content: value}).then(res => {\n      if (res) {\n        setNewTodo('');\n        getTodos(filters);\n      }\n    });\n  }, [addTodo, newTodo, getTodos, filters]);\n\n  const handleKeypress = useCallback(\n    e => {\n      if (e.key === 'Enter') {\n        addNewTodo();\n      }\n    },\n    [addNewTodo]\n  );\n\n  const busy = useMemo(() => pending || updatePending, [pending, updatePending]);\n\n  const listOrEmptyMessage = useMemo(() => {\n    if (!todos) return null;\n\n    const empty = todos.length ? null : <EmptyList filters={filters} />;\n\n    return (\n      empty || (\n        <List>\n          {todos.map(item => (\n            <ListItem key={item.id} divider>\n              <ListItemIcon>\n                <Checkbox\n                  disableRipple\n                  edge=\"start\"\n                  disabled={busy}\n                  checked={item.completed}\n                  tabIndex={-1}\n                  onChange={toggleComplete.bind(null, item)}\n                />\n              </ListItemIcon>\n              <ListItemText primary={item.content} />\n              <Box component=\"span\" ml={'1em'}>\n                <IconButton\n                  aria-label=\"edit\"\n                  onClick={editItem.bind(null, item.id)}\n                  disabled={busy}\n                >\n                  <EditIcon />\n                </IconButton>\n              </Box>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={deleteItem.bind(null, item.id)}\n                disabled={busy}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      )\n    );\n  }, [todos, busy, deleteItem, editItem, toggleComplete, filters]);\n\n  let updateErrorMessage = null;\n  if (props.updateError) {\n    updateErrorMessage = lastUpdateAction === 'add' ? 'Error adding TODO' : 'Error updating TODO';\n  }\n\n  return (\n    <>\n      <div className=\"header\">\n        <h2>Todo List</h2>\n      </div>\n      <div className=\"toolbar\">\n        <TextField\n          id=\"add-todo\"\n          variant=\"outlined\"\n          placeholder=\"Add a new TODO item\"\n          value={newTodo}\n          onChange={setTodo}\n          disabled={busy}\n          onKeyPress={handleKeypress}\n          autoComplete=\"off\"\n          size=\"small\"\n        />\n        <Box component=\"span\" ml=\"1em\" mr=\"1em\">\n          <Button variant=\"contained\" color=\"primary\" disabled={busy} onClick={addNewTodo}>\n            <AddIcon />\n          </Button>\n        </Box>\n        <div className=\"visibilityFilter\">\n          Showing: {filterDisplay(visibility)}\n          <ButtonMenu\n            label=\"Change Filter\"\n            items={filterOpts}\n            onChange={changeFilter}\n            component=\"span\"\n            selected={visibility}\n          />\n        </div>\n        <TextField\n          id=\"search-todo\"\n          variant=\"outlined\"\n          placeholder=\"Search\"\n          value={searchFilter}\n          onChange={changeSearch}\n          autoComplete=\"off\"\n          size=\"small\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchIcon />\n              </InputAdornment>\n            )\n          }}\n        />\n        <Box component=\"span\" ml=\"1em\">\n          {busy && <CircularProgress color=\"secondary\" />}\n        </Box>\n      </div>\n\n      {updateErrorMessage && <ErrorMessage error={updateErrorMessage} />}\n      {error && <ErrorMessage retry={retry} error={error.toString()} />}\n\n      {listOrEmptyMessage}\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  pending: PropTypes.bool,\n  updatePending: PropTypes.bool,\n  todos: PropTypes.arrayOf(todoPropTypes),\n  getTodos: PropTypes.func,\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  visibility: PropTypes.string,\n  searchFilter: PropTypes.string,\n  updateFilters: PropTypes.func,\n  error: PropTypes.object, // eslint-disable-line\n  updateError: PropTypes.object, // eslint-disable-line\n  filters: filtersPropTypes\n};\n\nexport default TodoList;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {useHistory, useParams} from 'react-router-dom';\n\nfunction EditTodo(props) {\n  const {getTodo, updateTodo, updateError, updatePending} = props;\n\n  const history = useHistory();\n\n  const {id} = useParams('id');\n\n  const [value, setValue] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n\n  useEffect(() => {\n    // redux-rest-middleware APIs return a promise that\n    // resolves with the payload on success or null\n    // if an error occurred.\n    getTodo(id).then(payload => {\n      if (payload) {\n        setValue(payload.content);\n        setCompleted(payload.completed);\n      } else {\n        setFetchError('Failed to retrieve TODO');\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const cancel = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  const save = useCallback(() => {\n    updateTodo(id, {id, content: value, completed}).then(res => {\n      // result is null in the case of an error\n      if (res !== null) history.push('/');\n    });\n  }, [updateTodo, history, id, value, completed]);\n\n  const onChangeInput = useCallback(\n    e => {\n      setValue(e.target.value);\n    },\n    [setValue]\n  );\n\n  if (updatePending) return <CircularProgress />;\n\n  let errorMessage = null;\n  if (fetchError) errorMessage = 'Error retrieving TODO';\n  else if (updateError) errorMessage = updateError.toString();\n  if (errorMessage) {\n    return (\n      <>\n        <h3>Unable to Edit TODO</h3>\n        <Box color=\"red\" mb=\"1em\">\n          {errorMessage}\n        </Box>\n        <Button variant=\"contained\" onClick={cancel}>\n          BACK\n        </Button>\n      </>\n    );\n  }\n\n  if (!value) return null;\n\n  return (\n    <>\n      <h2>Edit Todo</h2>\n      <Box mt=\"1em\" mb=\"1em\">\n        <TextField\n          id=\"edit-todo\"\n          variant=\"outlined\"\n          autoComplete=\"disable\"\n          onChange={onChangeInput}\n          value={value}\n        />\n      </Box>\n      <Box mt=\"1em\" mb=\"1em\">\n        <Button variant=\"contained\" onClick={cancel}>\n          Cancel\n        </Button>\n        <Box component=\"span\" ml=\"1em\">\n          <Button variant=\"contained\" color=\"primary\" onClick={save}>\n            Save\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nEditTodo.propTypes = {\n  getTodo: PropTypes.func.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  updateError: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  updatePending: PropTypes.bool\n};\n\nexport default EditTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nfunction Confirmation(props) {\n  return (\n    <Box mt=\"1em\">\n      <Box mb=\"1em\">{props.children}</Box>\n      <Button variant=\"contained\" onClick={props.onCancel}>\n        Cancel\n      </Button>\n      <Box component=\"span\" ml=\"1em\">\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onConfirm}>\n          Delete\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nConfirmation.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  children: PropTypes.node\n};\n\nexport default Confirmation;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport Confirmation from '../../components/Confirmation';\n\nfunction DeleteTodo(props) {\n  const {getTodo, deleteTodo, updatePending, updateError} = props;\n\n  const history = useHistory();\n\n  const {id} = useParams('id');\n\n  const [todo, setTodo] = useState(null);\n  const [fetchError, setFetchError] = useState(null);\n\n  useEffect(() => {\n    getTodo(id).then(data => {\n      if (data) {\n        setTodo(data);\n      } else {\n        setFetchError('Failed to retrieve TODO');\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const onCancel = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  const onDelete = useCallback(() => {\n    deleteTodo(id).then(res => {\n      if (res !== null) history.push('/');\n    });\n  }, [history, id, deleteTodo]);\n\n  if (updatePending) return <CircularProgress />;\n\n  let errorMessage = null;\n  if (fetchError) errorMessage = fetchError;\n  else if (updateError) errorMessage = updateError.toString();\n\n  if (errorMessage) {\n    return (\n      <>\n        <h2>Unable to Delete TODO</h2>\n        <Box color=\"red\" mb=\"1em\">\n          {errorMessage}\n        </Box>\n        <Button variant=\"contained\" onClick={onCancel}>\n          BACK\n        </Button>\n      </>\n    );\n  }\n\n  if (!todo) return null;\n\n  return (\n    <>\n      <Box mb=\"1em\">\n        <div>Delete TODO</div>\n        <Confirmation onCancel={onCancel} onConfirm={onDelete}>\n          <p className=\"warning\">Are you sure you want to delete TODO:</p>\n          <Paper>\n            <Box p=\"1em\">\n              {todo.content} {todo.completed ? '(completed)' : '(not completed)'}\n            </Box>\n          </Paper>\n        </Confirmation>\n      </Box>\n    </>\n  );\n}\n\nDeleteTodo.propTypes = {\n  getTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  updateError: PropTypes.object, // eslint-disable-line\n  updatePending: PropTypes.bool\n};\n\nexport default DeleteTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport todoPropTypes from './todoPropTypes';\nimport filtersPropTypes from './filtersPropTypes';\nimport TodoList from './TodoList';\nimport EditTodo from './EditTodo';\nimport DeleteTodo from './DeleteTodo';\n\nlet basename = '';\n// eslint-disable-next-line\nif (process.env.NODE_ENV === 'production') {\n  basename = '/redux-rest-actions-todo-example';\n}\n\nfunction TodosComponent(props) {\n  return (\n    <Box m=\"1em\" className=\"todoapp\">\n      <Router basename={basename}>\n        <Switch>\n          <Route exact path=\"/\">\n            <TodoList\n              getTodos={props.getTodos}\n              addTodo={props.addTodo}\n              error={props.listError}\n              updateError={props.updateError}\n              updateTodo={props.updateTodo}\n              deleteTodo={props.deleteTodo}\n              todos={props.todos}\n              pending={props.pending}\n              updatePending={props.updatePending}\n              visibility={props.visibility}\n              searchFilter={props.searchFilter}\n              updateFilters={props.updateFilters}\n              filters={props.filters}\n            />\n          </Route>\n          <Route exact path=\"/edit/:id\">\n            <EditTodo\n              getTodo={props.getTodo}\n              updateTodo={props.updateTodo}\n              updateError={props.updateError}\n              updatePending={props.updatePending}\n            />\n          </Route>\n          <Route exact path=\"/delete/:id\">\n            <DeleteTodo\n              getTodo={props.getTodo}\n              deleteTodo={props.deleteTodo}\n              updateError={props.updateError}\n              updatePending={props.updatePending}\n              todo={props.todo}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </Box>\n  );\n}\n\nTodosComponent.propTypes = {\n  getTodos: PropTypes.func,\n  getTodo: PropTypes.func,\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n  todos: PropTypes.arrayOf(todoPropTypes),\n  todo: todoPropTypes,\n  visibility: PropTypes.string,\n  searchFilter: PropTypes.string,\n  pending: PropTypes.bool,\n  updatePending: PropTypes.bool,\n  updateFilters: PropTypes.func,\n  listError: PropTypes.object, // eslint-disable-line\n  updateError: PropTypes.object, // eslint-disable-line\n  filters: filtersPropTypes\n};\n\nexport default TodosComponent;\n","import {createAction} from '@reduxjs/toolkit';\nimport {toQueryString} from './filters';\n\nexport const getTodos = createAction('GET_TODOS', filters =>\n  filters ? {payload: {params: {...filters}}} : {}\n);\nexport const getTodosSuccess = createAction('GET_TODOS_SUCCESS');\nexport const getTodosError = createAction('GET_TODOS_ERROR');\n\nexport const getTodo = createAction('GET_TODO', id => ({payload: {id}}));\nexport const getTodoSuccess = createAction('GET_TODO_SUCCESS');\nexport const getTodoError = createAction('GET_TODO_ERROR');\n\nexport const addTodo = createAction('ADD_TODO', todo => ({\n  payload: {data: {...todo, completed: false}}\n}));\nexport const addTodoSuccess = createAction('ADD_TODO_SUCCESS');\nexport const addTodoError = createAction('ADD_TODO_ERROR');\n\nexport const updateTodo = createAction('UPDATE_TODO', (id, todo) => ({\n  payload: {id, data: todo}\n}));\nexport const updateTodoSuccess = createAction('UPDATE_TODO_SUCCESS');\nexport const updateTodoError = createAction('UPDATE_TODO_ERROR');\n\nexport const deleteTodo = createAction('DELETE_TODO', id => ({payload: {id}}));\nexport const deleteTodoSuccess = createAction('DELETE_TODO_SUCCESS');\nexport const deleteTodoError = createAction('DELETE_TODO_ERROR');\n\n// This action stores current filters. Instead of calling it directly,\n// updateFilters is invoked to change the URL in the browser, using\n// redux-thunk to handle the side effect.\nexport const setFilters = createAction('SET_FILTERS');\n\nexport const updateFilters = (filters, history) => dispatch => {\n  dispatch(setFilters(filters));\n  history.push({search: toQueryString(filters)});\n};\n","export const selectTodos = state => state.list.todos;\nexport const selectTodosError = state => state.list.error;\nexport const selectTodosPending = state => state.list.pending;\n\nexport const selectUpdatePending = state => state.update.pending;\nexport const selectUpdateError = state => state.update.error;\nexport const selectTodo = state => state.update.todo;\n\nexport const selectFilters = state => state.filters;\nexport const selectVisibility = state => state.filters.visibility;\nexport const selectSearchFilter = state => state.filters.search;\n","import React from 'react';\nimport {api} from 'redux-rest-actions';\nimport {connect} from 'react-redux';\nimport TodosComponent from './TodosComponent';\n\nimport {updateFilters} from '../actions';\nimport * as selectors from '../selectors';\n\nfunction TodosContainer(props) {\n  return (\n    <TodosComponent\n      {...props}\n      getTodos={api.getTodos}\n      getTodo={api.getTodo}\n      addTodo={api.addTodo}\n      updateTodo={api.updateTodo}\n      deleteTodo={api.deleteTodo}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  todos: selectors.selectTodos(state),\n  todo: selectors.selectTodo(state),\n  listError: selectors.selectTodosError(state),\n  pending: selectors.selectTodosPending(state),\n  updatePending: selectors.selectUpdatePending(state),\n  updateError: selectors.selectUpdateError(state),\n  visibility: selectors.selectVisibility(state),\n  searchFilter: selectors.selectSearchFilter(state),\n  filters: selectors.selectFilters(state)\n});\n\nexport default connect(mapStateToProps, {updateFilters})(TodosContainer);\n","import TodosContainer from './TodosContainer';\n\nexport default TodosContainer;\n","// for all requests, set the pending flag and clear the error flag\nexport function initiate(draft) {\n  draft.pending = true;\n  draft.error = null;\n}\n\n// for errors, clear pending flag and store the error\nexport function error(draft, action) {\n  // eslint-disable-next-line\n  if (process.env.NODE_ENV !== 'test') {\n    // eslint-disable-next-line\n    console.log(`ERROR: ${action.payload.toString()}`);\n  }\n  draft.pending = false;\n  draft.error = action.payload;\n}\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {initiate, error} from './reducerHelper';\nimport * as actions from '../actions';\n\nconst initialState = {\n  todos: null,\n  pending: false,\n  error: null\n};\n\nexport default createReducer(initialState, {\n  [actions.getTodos]: draft => {\n    initiate(draft);\n  },\n  [actions.getTodosSuccess]: (draft, action) => {\n    draft.pending = false;\n    draft.todos = action.payload.todos;\n  },\n  [actions.addTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.deleteTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.updateTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.getTodosError]: (draft, action) => {\n    error(draft, action);\n  }\n});\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {initiate, error} from './reducerHelper';\nimport * as actions from '../actions';\n\nconst initialState = {\n  pending: false,\n  error: null\n};\n\nexport default createReducer(initialState, {\n  [actions.getTodo]: draft => {\n    // For edit and delete actions, fetching the todo again\n    // clears any previous error.\n    draft.error = null;\n  },\n  // add a TODO\n  [actions.addTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.addTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.addTodoError]: (draft, action) => {\n    error(draft, action);\n  },\n  // update a todo\n  [actions.updateTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.updateTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.updateTodoError]: (draft, action) => {\n    error(draft, action);\n  },\n  // delete a todo\n  [actions.deleteTodo]: draft => {\n    initiate(draft);\n  },\n  [actions.deleteTodoSuccess]: draft => {\n    draft.pending = false;\n  },\n  [actions.deleteTodoError]: (draft, action) => {\n    error(draft, action);\n  }\n});\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport * as filters from '../filters';\n\nimport {setFilters} from '../actions';\n\nconst initialState = {\n  search: '',\n  visibility: filters.ALL\n};\n\nexport default createReducer(initialState, {\n  [setFilters]: (draft, action) => action.payload\n});\n","import todosReducer from './todos/reducer';\n\n// Import all other reducers here and use combineReducers\n// to import the root reducer. This app only has one.\n\nexport default todosReducer;\n","/* eslint-disable default-case */\nimport {combineReducers} from 'redux';\n\nimport listReducer from './reducers/listReducer';\nimport updateReducer from './reducers/updateReducer';\nimport filterReducer from './reducers/filterReducer';\n\nconst rootReducer = combineReducers({\n  list: listReducer,\n  update: updateReducer,\n  filters: filterReducer\n});\n\nexport default rootReducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport {configureApiMiddleware} from 'redux-rest-actions';\nimport rootReducer from './reducer';\nimport MockAdapter from 'axios-mock-adapter';\nimport thunk from 'redux-thunk';\n\nconst apiMiddlewareOpts = {};\n\n// eslint-disable-next-line\nif (process.env.REACT_APP_USE_MOCK_DATA) {\n  apiMiddlewareOpts.mockAdapter = MockAdapter;\n  apiMiddlewareOpts.mockDelay = 500;\n}\n// eslint-disable-next-line\nif (process.env.REACT_APP_ENABLE_MIDDLEWARE_LOGGING) {\n  apiMiddlewareOpts.enableTracing = true;\n}\n\nlet baseURL = '';\n// eslint-disable-next-line\nif (process.env.REACT_APP_BASE_URL) {\n  // eslint-disable-next-line\n  baseURL = process.env.REACT_APP_BASE_URL;\n}\n\nconst apiMiddleware = configureApiMiddleware({baseURL}, apiMiddlewareOpts);\n\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [apiMiddleware, thunk],\n    preloadedState\n  });\n  // eslint-disable-next-line\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducer', () => store.replaceReducer(rootReducer));\n  }\n  return store;\n}\n","import * as todos from './todos/actions';\n\nexport default {\n  getTodos: {\n    url: '/api/todos',\n    actions: [todos.getTodos, todos.getTodosSuccess, todos.getTodosError]\n  },\n  getTodo: {\n    url: '/api/todos/:id',\n    actions: [todos.getTodo, todos.getTodoSuccess, todos.getTodoError]\n  },\n  addTodo: {\n    url: '/api/todos',\n    actions: [todos.addTodo, todos.addTodoSuccess, todos.addTodoError]\n  },\n  updateTodo: {\n    url: '/api/todos/:id',\n    actions: [todos.updateTodo, todos.updateTodoSuccess, todos.updateTodoError]\n  },\n  deleteTodo: {\n    url: '/api/todos/:id',\n    actions: [todos.deleteTodo, todos.deleteTodoSuccess, todos.deleteTodoError]\n  }\n};\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {configureApi} from 'redux-rest-actions';\nimport Todos from './todos/view';\n\nimport './App.css';\nimport configureStore from './store';\nimport apiConfig from './apiConfig';\n\nconst store = configureStore();\nconfigureApi(store, apiConfig);\n\nif (process.env.REACT_APP_USE_MOCK_DATA) {\n  const server = require('./mockServer').default;\n  server();\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Todos />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}